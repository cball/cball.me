<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Level Up</title>
  <subtitle>Your development and consulting skills</subtitle>
  <id>http://cball.me/</id>
  <link href="http://cball.me/"/>
  <link href="http://cball.me/feed.xml" rel="self"/>
  <updated>2014-01-16T05:00:00Z</updated>
  <author>
    <name>Chris Ball</name>
  </author>
  <entry>
    <title>Integrating with GitHub - Authentication and Web Hooks</title>
    <link rel="alternate" href="http://cball.me/integrating-with-github-authentication-and-web-hooks/"/>
    <id>http://cball.me/integrating-with-github-authentication-and-web-hooks/</id>
    <published>2014-01-16T05:00:00Z</published>
    <updated>2014-01-16T15:23:50-05:00</updated>
    <author>
      <name>Chris Ball</name>
    </author>
    <summary type="html">&lt;hr /&gt;
&lt;p&gt;Just over two weeks ago, I (and hopefully you!) started a challenge to "&lt;a href="http://cball.me/just-build-it-a-two-week-challenge/"&gt;Just build it&lt;/a&gt;". We set a timeline of two weeks to see what we could build in order to level up our development skills. I want to go over what I built, what I've learned, and give you tips you can implement in your applications.&lt;/p&gt;

&lt;p&gt;The application I built is called Gitshot (clearly, I didn't waste time thinking of a name), and it gives developers and designers the ability to generate screenshots from GitHub pull requests. </summary>
    <content type="html">&lt;hr /&gt;
&lt;p&gt;Just over two weeks ago, I (and hopefully you!) started a challenge to "&lt;a href="http://cball.me/just-build-it-a-two-week-challenge/"&gt;Just build it&lt;/a&gt;". We set a timeline of two weeks to see what we could build in order to level up our development skills. I want to go over what I built, what I've learned, and give you tips you can implement in your applications.&lt;/p&gt;

&lt;p&gt;The application I built is called Gitshot (clearly, I didn't waste time thinking of a name), and it gives developers and designers the ability to generate screenshots from GitHub pull requests.  So that I don't overload your brain or mine, this is a first in a series of 6 posts detailing almost every aspect of how the application works. Here's what we'll cover:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Integrating with GitHub - Authentication and Web Hooks&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Launching a Virtual Machine - Buddy up with Vagrant&lt;/li&gt;
  &lt;li&gt;Integrating Further with GitHub - SSH Keys and Deploy Keys&lt;/li&gt;
  &lt;li&gt;Booting your App in the Background&lt;/li&gt;
  &lt;li&gt;Generating Screenshots with PhantomJS&lt;/li&gt;
  &lt;li&gt;Tying it all together - Look mom, I learned something!&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="github-authentication"&gt;GitHub Authentication&lt;/h3&gt;

&lt;h4 id="getting-started"&gt;Getting started&lt;/h4&gt;
&lt;p&gt;GitHub uses OAuth for authentication. Instead of making API requests with a single token, your application will request authorization, receive a user-specific token, and make requests on behalf of that user.&lt;/p&gt;

&lt;p&gt;Start by &lt;a href="https://github.com/settings/applications/new"&gt;registering a new application&lt;/a&gt;. Callback urls in this section do not have to be publicly accessible. Here are my settings:
&lt;img alt="New GitHub Application Settings" src="https://s3.amazonaws.com/cball.me/new-github-app.png" /&gt;&lt;/p&gt;

&lt;p&gt;Add &lt;a href="https://github.com/octokit/octokit.rb"&gt;octokit.rb&lt;/a&gt; to your Gemfile to interface with the GitHub API.&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;octokit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;~&amp;gt; 2.0&amp;quot;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Add the following environment variables to your application with the keys from the previous step:&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="no"&gt;OCTOKIT_CLIENT_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xxxxx&lt;/span&gt;
&lt;span class="no"&gt;OCTOKIT_SECRET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;
&lt;/pre&gt;
&lt;h4 id="show-a-github-link-on-your-loginaccount-page"&gt;Show a GitHub link on your login/account page&lt;/h4&gt;
&lt;p&gt;We'll use Octokit to generate the authorization link for us. This link will identify our application to GitHub as well as request the permissions we specify. It's really important to only ask for what you need rather than trying to get all information under the sun. For Gitshot, I needed the user's email address and information about the repository:&lt;/p&gt;

&lt;pre class="highlight erb"&gt;&lt;span class="cp"&gt;&amp;lt;%&lt;/span&gt; &lt;span class="n"&gt;authorize_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Octokit&lt;/span&gt;&lt;span class="nf"&gt;.authorize_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;scope: &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;repo,user:email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Connect to GitHub&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;authorize_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;h4 id="exchange-an-authorization-code-for-a-proper-access-token"&gt;Exchange an authorization code for a proper access token&lt;/h4&gt;
&lt;p&gt;After the user authorizes our application, GitHub will redirect back to our callback url that we defined in the settings page, passing along a single parameter named &lt;strong&gt;code&lt;/strong&gt;. Let's exchange this for a proper OAuth token, which we'll store to make future calls on behalf of the user.&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;GitHubAuthCallbacksController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;oauth_code&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;user_from_github_access_token&lt;/span&gt;&lt;span class="nf"&gt;.update_with_github_info&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="nf"&gt;.save&lt;/span&gt;
      &lt;span class="n"&gt;sign_in&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="n"&gt;flash&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:error&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;There was an error contacting GitHub.&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;redirect_to&lt;/span&gt; &lt;span class="n"&gt;root_path&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;user_from_github_access_token&lt;/span&gt;
    &lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="nf"&gt;.where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;github_token: &lt;/span&gt;&lt;span class="n"&gt;github_access_token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.first_or_initialize&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;github_access_token&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Octokit&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;
    &lt;span class="n"&gt;token_response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="nf"&gt;.exchange_code_for_access_token&lt;/span&gt; &lt;span class="n"&gt;code_params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:code&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;token_response&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;access_token&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;code_params&lt;/span&gt;
    &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="nf"&gt;.permit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;There are a few things to note. First, we exchange our code that we just got back for an access token using &lt;strong&gt;client.exchange_code_for_access_token&lt;/strong&gt;. We can store the received token permanently, but keep in mind the user can revoke access at any time, and that scenario should be handled in your application. Finally, now that we are fully authenticated, we update some basic user info (email, name, and gravatar_url) by making another API request. If a user logs in using GitHub, it's usually safe to assume they do need a password, so we generate a random one.&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:github_token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;update_with_github_info&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Octokit&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt; &lt;span class="ss"&gt;access_token: &lt;/span&gt;&lt;span class="n"&gt;github_token&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="nf"&gt;.user&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="nf"&gt;.email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="nf"&gt;.email&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="nf"&gt;.name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="nf"&gt;.name&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="nf"&gt;.gravatar_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="nf"&gt;.gravatar_id&lt;/span&gt;

    &lt;span class="n"&gt;generate_password&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;generate_password&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="nf"&gt;.nil?&lt;/span&gt;
      &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="nf"&gt;.password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;SecureRandom&lt;/span&gt;&lt;span class="nf"&gt;.hex&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;h3 id="github-web-hooks"&gt;GitHub Web Hooks&lt;/h3&gt;

&lt;p&gt;In order to know when to generate screenshots and to be able to gather information from a GitHub pull request, we need to install a web hook. A web hook at its core is &lt;strong&gt;just another callback url&lt;/strong&gt;, that GitHub will post as much information as it possibly can about a pull request, comment or other activity. Here's how we do that:&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;ProjectGitHookAdder&lt;/span&gt;
  &lt;span class="kp"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:project&lt;/span&gt;
  &lt;span class="n"&gt;delegate&lt;/span&gt; &lt;span class="ss"&gt;:user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;to: :project&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;
    &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Octokit&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt; &lt;span class="ss"&gt;access_token: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="nf"&gt;.github_token&lt;/span&gt;
    &lt;span class="n"&gt;hook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="nf"&gt;.create_hook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="nf"&gt;.repository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;web&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hook_url_config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="n"&gt;hook_options&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;hook&lt;/span&gt;&lt;span class="nf"&gt;.id.present?&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;hook_url_config&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="ss"&gt;url: &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://gitshot.24.183.111.227.xip.io/hooks/1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;content_type: &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;hook_options&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="ss"&gt;events: &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pull_request&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pull_request_review_comment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;commit_comment&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;issue_comment&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="ss"&gt;active: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The important parts of the hook parameters are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;repository name&lt;/strong&gt; in the form of &amp;lt;user/repo&amp;gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;the url&lt;/strong&gt; (when developing locally I like to use &lt;a href="http://xip.io"&gt;xip.io&lt;/a&gt; since it integrates nicely with pow). Keep in mind that this url &lt;em&gt;must be publicly accessible&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;events&lt;/strong&gt; all of the events that will trigger this hook.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;active&lt;/strong&gt; you'll want to set this to true.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GitHub has great documentation on &lt;a href="http://developer.github.com/v3/repos/hooks/"&gt;hooks&lt;/a&gt; and &lt;a href="http://developer.github.com/v3/repos/hooks/#events"&gt;event types&lt;/a&gt; in case you need something different.&lt;/p&gt;

&lt;h4 id="testing-it-out"&gt;Testing it out&lt;/h4&gt;
&lt;p&gt;After authenticating and adding a hook to a repository, you should be able to see your new hook installed in the repository settings.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Hook Settings" src="http://cball.me.s3.amazonaws.com/github-hooks.png" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: If you find yourself needing to add additional event types, the only way to do so is through the API.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id="parsing-incoming-hooks"&gt;Parsing incoming hooks&lt;/h4&gt;
&lt;p&gt;GitHub will post to the url you set in the hook in the previous step. The payload is slightly different for each event you have registered, but a lot of the information is the same. &lt;/p&gt;

&lt;p&gt;In Gitshot, we need to know the url that a user wants a screenshot of, so I decided on a message convention of [screenshot /myurl]. To find this, we need to scan incoming hook data for this string. If the message is not found, or the pull request is closed, we ignore it. Here's how that works in Gitshot:&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;GitHubHooksController&lt;/span&gt;
  &lt;span class="n"&gt;skip_before_action&lt;/span&gt; &lt;span class="ss"&gt;:verify_authenticity_token&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;receive&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;github_ip?&lt;/span&gt;
      &lt;span class="no"&gt;GitHubHookProcessor&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:hook&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.process&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;nothing: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;github_ip?&lt;/span&gt;
    &lt;span class="c1"&gt;# GH: &amp;quot;The Public IP addresses for these hooks are: 192.30.252.0/22&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="nf"&gt;.ip&lt;/span&gt; &lt;span class="o"&gt;=~&lt;/span&gt; &lt;span class="sr"&gt;/192.30.(252|253|254|255).\d+/&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In the controller, we just make sure the request comes from a valid GitHub ip address, and pass the hook params along to our &lt;strong&gt;GitHubHookProcessor&lt;/strong&gt;:&lt;/p&gt;

&lt;pre class="highlight ruby"&gt;&lt;span class="k"&gt;class &lt;/span&gt;&lt;span class="nc"&gt;GitHubHookProcessor&lt;/span&gt;
  &lt;span class="kp"&gt;attr_accessor&lt;/span&gt; &lt;span class="ss"&gt;:hook_params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:project&lt;/span&gt;
  
  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hook_params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vi"&gt;@hook_params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hook_params&lt;/span&gt;
    &lt;span class="vi"&gt;@project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;process&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;project?&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;valid_hook?&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;hook_repo_matches_project?&lt;/span&gt;
      &lt;span class="n"&gt;process_pull_request&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;process_issue&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="n"&gt;process_comment&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;process_pull_request&lt;/span&gt;
    &lt;span class="no"&gt;GitHubPullRequestHookProcessor&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hook_params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:pull_request&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.process&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;process_issue&lt;/span&gt;
    &lt;span class="no"&gt;GitHubIssueHookProcessor&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hook_params&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.process&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def &lt;/span&gt;&lt;span class="nf"&gt;process_comment&lt;/span&gt;
    &lt;span class="no"&gt;GitHubCommentHookProcessor&lt;/span&gt;&lt;span class="nf"&gt;.new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hook_params&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:comment&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nf"&gt;.process&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;strong&gt;GitHubHookProcessor&lt;/strong&gt; runs the hook parameters through individual sub-processors, returning if a match for [screenshot /myurl] is found. If the processor finds the requested url, it also parses the BASE and HEAD commit hashes for the pull request, as well as checks the open/closed state to make sure its worth going any further. Unfortunately, we have to use 3 different processors since GitHub formats each of the parameters differently. It's also far better to split things out into separate classes than it is to add a bunch of if statements in our main processor.&lt;/p&gt;

&lt;p&gt;In an upcoming post, we'll see how to use these parsed messages to check out Git branches and instruct PhantomJS where to go to generate a screenshot.&lt;/p&gt;

&lt;h3 id="looking-ahead"&gt;Looking ahead&lt;/h3&gt;
&lt;p&gt;We've done a lot here! We started working with the GitHub API, authorized our application using OAuth, listed repositories for a user, and installed a hook to notify us when there is activity on the repository we care about. &lt;/p&gt;

&lt;p&gt;In part 2, we will be delving into virtual machines using Vagrant. This is extremely important in order to be able to check out and run code from an authorized repository in an secure, isolated, and temporary environment. &lt;a href="http://cball.me/newsletter"&gt;Get email updates for the rest of the series&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>How to Grow your Consulting Business in only 4 Hours per Week</title>
    <link rel="alternate" href="http://cball.me/how-to-grow-your-consulting-business-in-only-4-hours-per-week/"/>
    <id>http://cball.me/how-to-grow-your-consulting-business-in-only-4-hours-per-week/</id>
    <published>2014-01-05T05:00:00Z</published>
    <updated>2014-01-05T19:25:20-05:00</updated>
    <author>
      <name>Chris Ball</name>
    </author>
    <summary type="html">&lt;hr&gt;&lt;p&gt;If you're like me, you started (or plan to start) your consulting as a side business while keeping a full-time job. This is a great way to ease in to consulting, but requires putting in long hours every day to grow your business. And doing this over...&lt;/p&gt;</summary>
    <content type="html">&lt;hr /&gt;
&lt;p&gt;If you're like me, you started (or plan to start) your consulting as a side business while keeping a full-time job. This is a great way to ease in to consulting, but requires putting in long hours every day to grow your business. And doing this over an extended period of time will almost certainly lead to burnout.&lt;/p&gt;

&lt;p&gt;How then, can you take on additional work while maintaining a high degree of quality and avoiding burnout? &lt;strong&gt;By effectively using subcontractors&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id="find-the-right-talent"&gt;Find the right talent&lt;/h4&gt;
&lt;p&gt;Just like hiring a full-time employee, you have to find the right people in order to have any chance of being successful. I did this two ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I had some developer friends from previous jobs that were interested in making a little extra money on the side.&lt;/li&gt;
  &lt;li&gt;I found a few others at &lt;a href="http://bostonrb.org"&gt;boston.rb&lt;/a&gt;, my local ruby meetup.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're talking with people you've never worked with, try to get a feel for their skill level, what their strengths are, and the types of things they've worked on. The beauty of using someone as a subcontractor is you can try them out to make sure they are a good fit. If things go south, you're only out the initial time investment.&lt;/p&gt;

&lt;h4 id="build-up-a-network"&gt;Build up a network&lt;/h4&gt;
&lt;p&gt;If you have people that are doing work for you part-time, you'll have to deal with multiple schedules and scheduling issues. To help insulate yourself from potential problems, you're going to need overlap and backup. A bench, so to speak. I've found a core group of 3-4 developers works great for me.&lt;/p&gt;

&lt;p&gt;When trying to plan a weekly project roadmap, think of subcontractor hours as about 1/4 those of a normal employee. This past year, my subcontractors averaged no more than 7.5 hours per week, and I essentially gave them freedom to work as many hours as they wanted. Remember, they have full time jobs too. &lt;/p&gt;

&lt;h4 id="you-should-always-be-the-one-kicking-off-the-project"&gt;You should always be the one kicking-off the project&lt;/h4&gt;
&lt;p&gt;There are two reasons for this.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You are the face of the business. Your clients will be talking to you, not your subcontractors.&lt;/li&gt;
  &lt;li&gt;You can always be sure that the project management tools, initial code structure, and workflow are set up properly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With the initial setup out of the way, you can then start divvying out the work.&lt;/p&gt;

&lt;h4 id="charge-more-than-your-subcontractors-charge-you"&gt;Charge more than your subcontractors charge you&lt;/h4&gt;
&lt;p&gt;Never pass the cost of your subcontractor directly to the client. &lt;strong&gt;Always charge a markup&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Say you bill out at $150 per hour (though I recommend using weekly rates after you're established) and your subcontractor charges $100 per hour. Here's how that works for an average 7.5 hour week:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id="x-75---100-x-75--375--4-management-hrs--9375hr"&gt;$150 x 7.5 - $100 x 7.5 = $375 / 4 management hrs = $93.75/hr&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;p&gt;You're getting paid $93.75 per hour to do 4 hours of project management and code reviews. That being said, I almost never need the 4 hours I've allotted for this and end up spending only about 2 hours per week. That math comes out far better:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;h4 id="x-75---100-x-75--375--2-management-hrs--18750hr"&gt;$150 x 7.5 - $100 x 7.5 = $375 / 2 management hrs = $187.50/hr&lt;/h4&gt;
&lt;/blockquote&gt;

&lt;h4 id="use-a-good-invoicing-tool"&gt;Use a good invoicing tool&lt;/h4&gt;
&lt;p&gt;I recommend &lt;a href="https://echobind.freshbooks.com/refer/www"&gt;Freshbooks&lt;/a&gt; since it has a great subcontractor feature. Subcontractors can invoice me whenever they'd like at whatever rate we've agreed to, and it all flows through to my invoices to clients at the rate that I set.&lt;/p&gt;

&lt;h4 id="do-it-all-in-4-hours-per-week"&gt;Do it all in 4 hours per week&lt;/h4&gt;
&lt;p&gt;Once you have this system set up, here's how it allows you to grow with limited time invested:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;At the beginning of the week, plan your development work for that week based on subcontractors scheduling. Each week, try to get a feel for how many hours each person thinks they can put in and compare that with the hours they actually end up working. I do this with a simple spreadsheet. &lt;strong&gt;(0.5 hours)&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;During the week review all code and approve it before it goes into the main codebase. I do this using Github Pull Requests. The actual amount of time varies based on the feature and the skill of your subcontractors, but if you just review and offer improvement suggestions it shouldn't take up a ton of time. &lt;strong&gt;(1-3.5 hours)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="challenges"&gt;Challenges&lt;/h4&gt;
&lt;p&gt;Using subcontractors to grow your business is not without its challenges. Here are a few.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Dealing with schedules. If someone doesn't come through, it all falls back on you. Because of this it's extremely important to not overbook yourself.&lt;/li&gt;
  &lt;li&gt;Dealing with turn-over. Subcontractors by nature are not as stable as full-time employees. There is no guarantee how long someone will be available to you.&lt;/li&gt;
  &lt;li&gt;Development work is done nights and weekends. I've never had this be an issue with any of my clients, but it's something to note. As long as your accessible to them via email and phone during the day you should not run into any problems.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Subcontractors are one of the many ways that allowed me to make the jump from part-time to running &lt;a href="http://echobind.com"&gt;echobind&lt;/a&gt; full-time. By slowly taking on client work and using subcontractors to fill in the gaps, you'll be able to build up a financial runway and enough of a project pipeline to transition to consulting full-time. I'll explain this in more detail - &lt;strong&gt;including when to make the jump&lt;/strong&gt; - in future posts. Here's to growth!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Just Build It</title>
    <link rel="alternate" href="http://cball.me/just-build-it-a-two-week-challenge/"/>
    <id>http://cball.me/just-build-it-a-two-week-challenge/</id>
    <published>2013-12-28T05:00:00Z</published>
    <updated>2014-01-13T20:04:50-05:00</updated>
    <author>
      <name>Chris Ball</name>
    </author>
    <summary type="html">&lt;hr /&gt;
&lt;p&gt;A foolproof way to level up your development in a short amount of time is to just build something. Pick something away from the silo of your day job or client work (something different than what you work on daily will be more exciting!), give yourself a deadline, and just build it.&lt;/p&gt;

&lt;p&gt;</summary>
    <content type="html">&lt;hr /&gt;
&lt;p&gt;A foolproof way to level up your development in a short amount of time is to just build something. Pick something away from the silo of your day job or client work (something different than what you work on daily will be more exciting!), give yourself a deadline, and just build it.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id="find-an-idea"&gt;Find an idea&lt;/h4&gt;
&lt;p&gt;There's no need to make this complicated or think about how to turn it into a paid product (though that can be a nice side benefit). The goal here is to find anything you can create a working prototype for in a short amount of time. API mashups are great candidates, and your twitter feed likely has inspiration if you can't think of anything.&lt;/p&gt;

&lt;h4 id="make-sure-the-scope-is-small"&gt;Make sure the scope is small&lt;/h4&gt;
&lt;p&gt;This is key - we're going to set a deadline of 2 weeks to complete this project, and do so using only free time. Choose something you can devote a total of no more than 20 hours to.&lt;/p&gt;

&lt;h4 id="you-dont-have-to-get-it-perfect-right-away"&gt;You don't have to get it perfect right away&lt;/h4&gt;
&lt;p&gt;Make sure to write tests, make it visually appealing, and write clean code, but don't spend too much time making it perfect. The goal is just to get something out in the wild, and level up your skills along the way. It can always be refined later. &lt;/p&gt;

&lt;p&gt;Use something like &lt;a href="http://heroku.com"&gt;Heroku&lt;/a&gt; so that you're not wasting time setting up a VPS. Use a front-end framework so that you don't spend as much time styling css. Where appropriate, use libraries that someone has already built so that you don't get bogged down in the details. This is not the type of project where you build authentication from scratch. Though it's not hard to do so, we want to stay focused on the core functionality of the app. &lt;/p&gt;

&lt;p&gt;We will revisit the app you build as a refactoring exercise in a future post. &lt;/p&gt;

&lt;h4 id="use-a-planning-tool"&gt;Use a planning tool&lt;/h4&gt;
&lt;p&gt;Make sure to break your app down into small chunks so that "ok, what's next?" is a phrase that never crosses your mind. &lt;a href="http://trello.com"&gt;Trello&lt;/a&gt; and Github Issues are great free tools to help with this, or you can use a todo app or handwritten list. It doesn't matter what you use, just use something.&lt;/p&gt;

&lt;h4 id="ill-join-you"&gt;I'll join you!&lt;/h4&gt;
&lt;p&gt;To give you an example and to show you that this works, I'm going to be building an app that will generate before and after screenshots from comments on Github pull requests.&lt;/p&gt;

&lt;p&gt;I'm taking this idea from a tweet from Brian Cardarella:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Screenshot app tweet" class="no-resize" src="http://cball.me/images/screenshot-app-tweet.png" /&gt;&lt;/p&gt;

&lt;p&gt;I'm going to build this app and then do a followup post in 2 weeks detailing my approach from start to finish, and showing what I have learned. &lt;/p&gt;

&lt;h4 id="lets-do-this"&gt;Let's do this&lt;/h4&gt;
&lt;p&gt;Remember, we are going to try our best to finish our "Just build it" app in 2 weeks time, but don't get frustrated if you can't quite complete it. As long as you put some real effort behind it, you'll see the benefits. Worst case, you'll have something interesting to discuss with other developers at your next meetup (you are attending meetups right?).&lt;/p&gt;

&lt;p&gt;If you take part in the "Just build It" challenge, let me know what you're working on!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Walk Like a Designer</title>
    <link rel="alternate" href="http://cball.me/walk-like-a-designer/"/>
    <id>http://cball.me/walk-like-a-designer/</id>
    <published>2013-12-18T05:00:00Z</published>
    <updated>2013-12-18T09:30:34-05:00</updated>
    <author>
      <name>Chris Ball</name>
    </author>
    <summary type="html">&lt;hr&gt;&lt;p&gt;You're a developer, not a designer. I get that. But to say you just "can't do front-end" is just plain wrong. Especially considering the tools that we have available to us today. I think you'll find if you learn to walk like a designer (and by that...&lt;/p&gt;</summary>
    <content type="html">&lt;hr /&gt;
&lt;p&gt;You're a developer, not a designer. I get that. But to say you just "can't do front-end" is just plain wrong. Especially considering the tools that we have available to us today. I think you'll find if you learn to walk like a designer (and by that I mean learn your way around HTML, CSS and SCSS enough to produce quality work), you'll be pretty proud of what you can accomplish.&lt;/p&gt;

&lt;h4 id="stop-the-i-only-do-back-end-mentality"&gt;Stop the "I only do back-end" mentality&lt;/h4&gt;
&lt;p&gt;To many developers, design or front-end development is a black box and they never make an attempt to change that viewpoint. It's absolutely fine to &lt;em&gt;specialize&lt;/em&gt; in writing Ruby code, JavaScript, or SCSS, but these things should not be mutually exclusive. Sure, you might not have a natural design talent, but I'll bet you can look at something and determine if it looks good or not. Let's look at how we can improve this line of thinking.&lt;/p&gt;

&lt;h4 id="lets-make-full-stack-development-just-part-of-the-job"&gt;Let's make "full stack" development just part of the job&lt;/h4&gt;
&lt;p&gt;Improvement starts by not glorifying the fact that someone is a "full stack" developer. These days, most of us are not working on massively complicated systems. More often than not, we are working on products that are used directly by customers. As developers, why are we putting ourselves in a position to have to hand portions of a project off to someone who is "better at front-end" than us when, with just a little effort, we could take a feature to completion?&lt;/p&gt;

&lt;p&gt;Instead of just handing over a Photoshop document, designers are now expected to know HTML, CSS and probably a css pre-processor like SCSS. Developers need to master these skills as well. It allows a knowledge overlap of the middle ground, which will increase efficiency of the team and ultimately, create better products.&lt;/p&gt;

&lt;p&gt;&lt;img alt="skill graph" src="/images/designer-developer-skills.png" /&gt;&lt;/p&gt;

&lt;p&gt;Here's why this is awesome:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You as a developer can take a feature to completion.&lt;/li&gt;
  &lt;li&gt;Designers will not come to you the second they are done with Photoshop.&lt;/li&gt;
  &lt;li&gt;If you want to work on a side project, you'll be able to do a decent job with it and won't need to hire a designer to make it look nice.&lt;/li&gt;
  &lt;li&gt;You start thinking more about the customer. When working only on back-end code, the customer is the furthest thing from your mind. It's amazing how much better your work can be when you think of how a human will interact with it.&lt;/li&gt;
  &lt;li&gt;It will make you more marketable, which can increase your salary, or allow you to start a consultancy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here a a few things you can do &lt;strong&gt;right now&lt;/strong&gt;, to make yourself better at front end development:&lt;/p&gt;

&lt;h4 id="quick-hit-1-learn-the-grid"&gt;Quick Hit #1: Learn the grid&lt;/h4&gt;
&lt;p&gt;Laying out on a grid is the foundation of a good design, and will help solve issues with whitespace or things feeling crammed together.&lt;/p&gt;

&lt;p&gt;By far the easiest way to get started with laying out pages in grids is to use a framework like &lt;a href="http://getbootstrap.com"&gt;Bootstrap&lt;/a&gt; or &lt;a href="http://foundation.zurb.com"&gt;Foundation&lt;/a&gt;. Paired with a browser plugin like &lt;a href="http://alefeuvre.github.io/foundation-grid-displayer/"&gt;Grid displayer&lt;/a&gt;, you can look at the grid for any Bootstrap or Foundation site. This will get you to start thinking in grids and see how other people have used them. Pay attention to how a grid automatically helps your content "breathe" and makes your layout uniform.&lt;/p&gt;

&lt;h4 id="quick-hit-2-imitate-good-designs"&gt;Quick Hit #2: Imitate good designs&lt;/h4&gt;
&lt;p&gt;Find a site or UI that you like and learn how to implement it. And don't just copy and paste, either. Take the time to learn how each piece fits together and why each line of HTML or CSS is there. See how it fits into a grid, and how it enhances the overall experience. Maybe they use a great responsive design and you like the experience on your phone. Or maybe there is a creative approach to navigation.&lt;/p&gt;

&lt;p&gt;Once you do this a few times you'll learn all kinds of new techniques that you can immediately start applying to new work.&lt;/p&gt;

&lt;h4 id="quick-hit-3-pair-with-someone-whos-better-than-you"&gt;Quick Hit #3: Pair with someone who's better than you&lt;/h4&gt;
&lt;p&gt;Pairing is often encouraged in the world of Ruby and Rails, but not as much with design, HTML, CSS or JavaScript. Find someone who is better than you and work with them for 30 minutes to 1 hour. Explain how you're thinking about approaching the problem, and then have them think out loud while both of you code. You'll be amazed at how much knowledge you can soak up in a short amount of time.&lt;/p&gt;

&lt;p&gt;Front-end development is extremely important. It's how your customer interacts with your product. Work out some of the quick hits I mentioned here and let me know how it goes! If you need someone to pair with, give me a shout.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Communication is Key</title>
    <link rel="alternate" href="http://cball.me/communication-is-key/"/>
    <id>http://cball.me/communication-is-key/</id>
    <published>2013-12-17T05:00:00Z</published>
    <updated>2013-12-18T09:30:38-05:00</updated>
    <author>
      <name>Chris Ball</name>
    </author>
    <summary type="html">&lt;hr&gt;&lt;p&gt;Communication is a strange beast. It can destroy relationships,  and it can win you clients. It can make you sound knowledgeable, or make it seem like you have no idea what you're doing.&lt;/p&gt;

&lt;p&gt;Here are a few small tips on communication from a consulting...&lt;/p&gt;</summary>
    <content type="html">&lt;hr /&gt;
&lt;p&gt;Communication is a strange beast. It can destroy relationships,  and it can win you clients. It can make you sound knowledgeable, or make it seem like you have no idea what you're doing.&lt;/p&gt;

&lt;p&gt;Here are a few small tips on communication from a consulting perspective:&lt;/p&gt;

&lt;h4 id="learn-how-to-talk-to-people"&gt;Learn how to talk to people&lt;/h4&gt;
&lt;p&gt;I have a client that I've worked with for a few years now. When having a discussion with them back in October, I was told that one of the reasons they enjoy working with me is because I know how to talk to them. That statement was not to imply that I have great sales tactics, but that I've developed an ability to explain technical topics in a simple, easy to understand way.&lt;/p&gt;

&lt;p&gt;If you're a developer-turned-consultant, you probably fall into this trap all the time and find yourself having to take a mental step back when explaining things. Always remember to dial back the complexity in a conversation.&lt;/p&gt;

&lt;h4 id="discover-your-style"&gt;Discover your style&lt;/h4&gt;
&lt;p&gt;Style = personality. If you the type to crack an occasional joke, do it. If you're a bit quirky, go for it. If you sound like you're giving a formal lecture to a client when you're on a conference call with them, you're probably doing it wrong. Relax and stay professional, but let your personality shine through. This has a wonderful side benefit - it makes your client feel as if they are talking with a friend, and less like they are talking to a co-worker or someone who just cranks out code.&lt;/p&gt;

&lt;h4 id="technical-jargon-is-not-a-style"&gt;Technical jargon is not a style&lt;/h4&gt;
&lt;p&gt;Save the tech-heavy talk for meetup groups. Avoiding jargon and simplifying your discussion will boost client confidence and understanding. They're already impressed with your technical skills or they wouldn't be talking to you.&lt;/p&gt;

&lt;h4 id="explain-how-you-are-solving-a-problem"&gt;Explain how you are solving a problem&lt;/h4&gt;
&lt;p&gt;This is not the same thing as &lt;em&gt;what you are using&lt;/em&gt; to solve the problem. Most of the time clients don't care what technologies you use, they just care about the outcome. So talk about what they can expect after finishing a project or portion of a project.&lt;/p&gt;

&lt;h4 id="followup"&gt;Followup&lt;/h4&gt;
&lt;p&gt;Make it a point to reach out to clients periodically and see how things are going for them. I'd advise keeping this information in a CRM of some sort, both the date you should follow up, and what you've talked about in the past. Maybe you want to keep track of the anniversary of the company, or reach back out 6 months after an engagement to see how your work has changed their business. You'll be shocked at how much people appreciate a simple gesture like this. &lt;strong&gt;Note: Followups are a perfect time to ask for a testimonial!&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id="practice"&gt;Practice&lt;/h4&gt;
&lt;p&gt;If you're experiences are anything like mine you will fumble through conversations with your first few clients. Just keep at it, and with practice you'll get much better.&lt;/p&gt;

&lt;p&gt;Learn to communicate well, and I'll bet your clients will start talking more about you to others.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Let's Level Up</title>
    <link rel="alternate" href="http://cball.me/lets-level-up/"/>
    <id>http://cball.me/lets-level-up/</id>
    <published>2013-12-13T05:00:00Z</published>
    <updated>2013-12-17T13:22:59-05:00</updated>
    <author>
      <name>Chris Ball</name>
    </author>
    <summary type="html">&lt;h4 id="what-is-this-blog-about"&gt;What is this blog about?&lt;/h4&gt;
&lt;p&gt;In order to be the best you can be in anything in life, you need to practice. My goal with this blog is to give actionable advice on &lt;em&gt;how to practice&lt;/em&gt; in order to "level up" as a developer and/or a consultant.&lt;/p&gt;

&lt;h4 id="how-i-can-help-you-the-developer"&gt;How I can help you: the developer&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;I'll show you how to make yourself more marketable by improving your design and front-end skills. If you're a developer that "only does back-end" work, come up for air and change that viewpoint. You may not become the next best designer, but you need to be competent.&lt;/li&gt;
  &lt;li&gt;I want to help you to avoid getting too comfortable with your skillset. The web and mobile space changes rapidly and becoming comfortable is a mind-trap that puts you in an excellent position to watch the rest of the industry pass you by. &lt;/li&gt;
  &lt;li&gt;I'll teach you how to stay sane when working with large codebases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;</summary>
    <content type="html">&lt;h4 id="what-is-this-blog-about"&gt;What is this blog about?&lt;/h4&gt;
&lt;p&gt;In order to be the best you can be in anything in life, you need to practice. My goal with this blog is to give actionable advice on &lt;em&gt;how to practice&lt;/em&gt; in order to "level up" as a developer and/or a consultant.&lt;/p&gt;

&lt;h4 id="how-i-can-help-you-the-developer"&gt;How I can help you: the developer&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;I'll show you how to make yourself more marketable by improving your design and front-end skills. If you're a developer that "only does back-end" work, come up for air and change that viewpoint. You may not become the next best designer, but you need to be competent.&lt;/li&gt;
  &lt;li&gt;I want to help you to avoid getting too comfortable with your skillset. The web and mobile space changes rapidly and becoming comfortable is a mind-trap that puts you in an excellent position to watch the rest of the industry pass you by. &lt;/li&gt;
  &lt;li&gt;I'll teach you how to stay sane when working with large codebases.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id="how-i-can-help-you-the-consultant"&gt;How I can help you: the consultant&lt;/h4&gt;
&lt;p&gt;Like most, I started out on nights and weekends. Even though I had read a lot from others, it still took some trial and error to learn the ropes.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If your a developer interested in making the jump to consulting, I'll explain how to get there, and how to know you're ready.&lt;/li&gt;
  &lt;li&gt;I'll explain pros and cons of subcontractors, and how they helped me grow my business.&lt;/li&gt;
  &lt;li&gt;I'll explain tips to help you raise your rates and pitch ideas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="how-i-can-help-you-better-your-life"&gt;How I can help you: better your life&lt;/h4&gt;
&lt;p&gt;I'm no life coach, but I want to share some things that have helped me live a happier life. The first step (learned by me the hard way of course)? &lt;strong&gt;Don't work too much!&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id="why-should-you-listen-to-me"&gt;Why should you listen to me?&lt;/h4&gt;
&lt;p&gt;I haven't given any large talks, created a massively used open-source library, built &lt;a href="http://echobind.com"&gt;echobind&lt;/a&gt; into a huge agency, or written a best selling book. But my guess is, more than likely, you're in the same boat.&lt;/p&gt;

&lt;p&gt;I want to show you how these are all excellent long-term goals, but they are absolutely not requirements in order to be a successful and profitable developer or consultant. You can be a little fish in a big pond and still have a sustainable business and a happy life. Most of &lt;a href="http://echobind.com"&gt;echobind&lt;/a&gt;'s clients love the personal attention and camaraderie they get from working with a small agency.&lt;/p&gt;
</content>
  </entry>
</feed>
